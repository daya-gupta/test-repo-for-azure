{"version":3,"sources":["common/components/Navigation.js","common/constants.js","common/util.js","common/actions/commonActions.js","common/components/WatchlistToggler.js","common/components/typeahead.js","components/chartRender.js","company/index.js","company/action.js","comparision/action.js","watchlist/components/coloredCircle.js","watchlist/components/watchlistRow.js","components/BasicChart.js","watchlist/index.js","watchlist/actions.js","common/components/loader.js","common/components/ErrorBar.js","App.js","reducers/company-reducer.js","reducers/watchlist-reducer.js","reducers/comparision-reducer.js","reducers/common-reducer.js","store.js","index.js","common/images/logo.svg"],"names":["connect","state","common","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","durationOptions","label","initialStorageData","activeWatchlistIndex","watchlistData","name","companies","metadata","hdfcbank","note","color","weeksArr","getStorageData","JSON","parse","localStorage","getItem","setStorageData","data","setItem","stringify","getActiveWatchlistData","storageData","activeWatchlistData","filter","item","setActiveWatchlistData","processHistoricalData","historicalData","consolidatedData","datasets","priceValues","values","volumeValues","processedData","map","index","date","price","Number","volume","revenue","profit","quarter","matchingIndex","findIndex","value","substr","calculateAveragePriceChange","noOfWeeks","totalPriceChange","reduce","a","b","priceChange","length","toFixed","calculateScore","arr","arrLength","score","i","benchmark","setError","message","isHtml","messageType","updateMetadata","companyId","metadataType","metadataValue","watchlistMetadata","companyMetadata","WatchlistToggler","addFlow","selectWatchlist","props","toggleWatchlistContainer","addNewWatchlist","setState","confirmNewWatchlist","isConfirmed","watchlistName","nameInput","this","activeWatchlistName","onClick","customStyle","fontWeight","style","background","ref","placeholder","React","PureComponent","mapDispatchToProps","selectedIndex","push","AsyncTypeahead","asyncContainer","Typeahead","TypeaheadComponent","isLoading","options","selectCompany","_handleSearch","query","searchCompany","labelKey","onSearch","onChange","selected","Component","ChartRender","category","forEach","company","stockData","seriesData","chartType","priceData","volumeData","yAxis","revenueData","profitData","connectNulls","val","element","compareList","getSeriesData","finalData","j","title","legend","align","verticalAlign","layout","x","text","opposite","xAxis","categories","categoriesGenerator","labels","items","left","top","Highcharts","theme","textColor","series","getData","highcharts","Company","selectedCompany","url","duration","historicalDataCallback","consolidatedDataCallback","selection","getHistoricalData","getConsolidatedData","renderChart","chartData","addToWatchlist","errorMessage","error","changeDuration","renderDuration","role","customClass","disabled","render","callback","dispatch","axios","get","then","res","tableRows","DOMParser","parseFromString","querySelectorAll","quarterTds","revenueTds","profitTds","qSplit","split","year","month","toLowerCase","getMonth","getQuarter","textContent","trim","replace","processConsolidatedData","catch","messagetype","connectedComponent","colorCodes","ColoredCircle","toggleOptions","showOptions","showNote","toggleNote","itemId","textarea","moveStock","Fragment","margin","width","class","defaultValue","RemoveStockBtn","styled","button","WatchlistRow","handleCheckboxChange","removeStock","watchlist","priceChangeRange","scoreR","growthScore","revenueScore","scoreP","profitScore","checked","change","key","Form","Check","rel","target","href","range","min","max","r","g","backgroundColor","chart","height","enabled","visible","Watchlist","initalizeWatchlist","getWatchlistData","priceVolumeData","growthScoreArr","getComparisionListData","compareListData","earningData","compareListDataItem","combinedScore","averageProfitScore","averageRevenueScore","calculateGrowthScore","priceVolumeDataItem","priceVolumeDataItem1","price1","lastPrice","pop","secondLastPrice","splice","volume1","lastVolume","secondLastVolume","calculateChange","getPriceChange","averagePriceChange","getAveragePriceChange","calculatePriceChange","prices","offset","latestPrice","previousPrice","weeks","slice","reverse","w","event","watchlistDataItem","matchingIndexInWatchlist","compare","param","localData","newWatchlistData","newWatchlist","item2","removedItemFromWatchlistData","removedItemFromWatchlist","targetWatchlistIndex","companyInWatchlistData","find","calculate","isVolume","Array","isArray","lastItem","secondLastItem","sortBy","numericSort","sortOrder","sort","indexOf","paramSplits","aValue","bValue","isNaN","renderWatchlist","masterChecked","priceChangeArr","_","console","log","html","e","ind","renderCompareView","count","nextProps","promises","test","test1","Promise","all","setCompareList","src","loaderImg","alt","timer","resetError","clearTimeout","setTimeout","dangerouslySetInnerHTML","__html","showLoader","exact","path","component","initialState","cartItems","companyReducer","action","newState","newCartItems","watchlistReducer","cartTotal","checkboxSelectionList","comparisionReducer","commonReducer","Object","assign","reducers","combineReducers","comapny","comparision","middlewares","applyMiddleware","thunk","store","createStore","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.47a207cf.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nfunction Navigation() {\n    return (\n        <div className=\"nav-container\">\n            <div className=\"navbar navbar-expand-sm navbar-light\">\n                <span className=\"navbar-brand\">Stock Analysis</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            {/* <button className=\"btn nav-link\">Company</button> */}\n                            <Link className=\"nav-link\" to='/'>Company</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            {/* <button className=\"btn nav-link\">Watchlist</button> */}\n                            <Link className=\"nav-link\" to='/watchlist'>Watchlist</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            {/* <button className=\"btn nav-link\">Comparision</button> */}\n                            <Link className=\"nav-link\" to='/comparision'>Comparision</Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n            {/* <div className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"#\">Link</a>\n                        </li>\n                    </ul>\n                </div>\n            </div> */}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    common: state.common\n});\n\nconst mapDispatchToProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","// export const watchlistName = 'watchlist';\n// export const watchlistName = 'watchlistBse200';\n// export const watchlistName = 'test';\n// export const watchlistName = 'new';\nexport const watchlistName = 'test2';\n\nexport const localStorageNode = 'app-data';\n\nexport const durationOptions = [\n  {id: 30, label: '1m'},\n  {id: 90, label: '3m'},\n  {id: 180, label: '6m'},\n  {id: 400, label: '1Yr'},\n  {id: 1080, label: '3Yr'},\n  {id: 1800, label: 'Max'}\n];\n","import {localStorageNode} from './constants';\n\nconst initialStorageData = {\n  activeWatchlistIndex: 0,\n  watchlistData: [{\n    name: 'Master',\n    companies: [],\n  }],\n  metadata: {\n    hdfcbank: {\n      note: 'good results!!',\n      color: 0\n    }\n  }\n}\n\nexport const weeksArr = [0, 1, 2, 4, 9, 13, 26, 52, 104, 156, 260];\n\nexport const getStorageData = () => {\n  const storageData = JSON.parse(localStorage.getItem(localStorageNode)) || initialStorageData;\n  return storageData;\n}\n\nexport const setStorageData = (data) => {\n  localStorage.setItem(localStorageNode, JSON.stringify(data));\n}\n\nexport const getActiveWatchlistData = () => {\n  const storageData = getStorageData();\n  const activeWatchlistIndex = storageData.activeWatchlistIndex;\n  const activeWatchlistData = storageData.watchlistData[activeWatchlistIndex];\n  if (activeWatchlistData.name === 'Primary') {\n    const companies = storageData.watchlistData[0].companies.filter(item => !storageData.metadata[item.id] || !storageData.metadata[item.id].color || storageData.metadata[item.id].color === 'a');\n    activeWatchlistData.companies = companies;\n  } else if (activeWatchlistData.name === 'Secondary') {\n    const companies = storageData.watchlistData[0].companies.filter(item => storageData.metadata[item.id] && storageData.metadata[item.id].color === 'c');\n    activeWatchlistData.companies = companies;\n  } else if (activeWatchlistData.name === 'Test') {\n    const companies = storageData.watchlistData[0].companies.filter(item => storageData.metadata[item.id] && storageData.metadata[item.id].color === 'b');\n    activeWatchlistData.companies = companies;\n  }\n  return activeWatchlistData;\n}\n\nexport const setActiveWatchlistData = (data) => {\n  const storageData = getStorageData();\n  const activeWatchlistIndex = storageData.activeWatchlistIndex;\n  storageData.watchlistData[activeWatchlistIndex] = data;\n  localStorage.setItem(localStorageNode, JSON.stringify(storageData));\n}\n\nexport const processHistoricalData = (historicalData, consolidatedData = []) => {\n    if (!historicalData || !historicalData.datasets || !historicalData.datasets[0]) {\n        return [];\n    }\n    const priceValues = historicalData.datasets[0].values;\n    const volumeValues = historicalData.datasets[1].values;\n    const processedData = priceValues.map((item, index) => ({\n        date: item[0],\n        price: Number(item[1]),\n        volume: Number(volumeValues[index][1]),\n        revenue: null,\n        profit: null\n    }))\n    if (consolidatedData.quarter) {\n        consolidatedData.quarter.map((item, index) => {\n            const matchingIndex = processedData.findIndex(value => {\n                return value.date.substr(0,7) === item;\n            });\n            if( matchingIndex !== -1 ) {\n                processedData[matchingIndex].revenue = Number(consolidatedData.revenue[index]);\n                processedData[matchingIndex].profit = Number(consolidatedData.profit[index]);\n            }\n        });\n    }\n    return processedData;\n}\n\nexport const calculateAveragePriceChange = (watchlistData, noOfWeeks) => {\n  const totalPriceChange = watchlistData.reduce((a, b) => {\n    return a + (Number(b.priceChange[noOfWeeks]) || 0);\n  }, 0);\n  const averagePriceChange = watchlistData.length ? (totalPriceChange / watchlistData.length).toFixed(2) : 'NA';\n  return averagePriceChange;\n}\n\nexport const calculatePriceChange = (prices, noOfWeeks) => {\n  const days = noOfWeeks === 0 ? 1 : noOfWeeks * 5;\n  const latestPrice = prices[prices.length - 1] || 0;\n  const previousPrice = prices[prices.length - 1 - days] || prices[0] || 1;\n  const change = (latestPrice - previousPrice)/previousPrice;\n  return (change * 100).toFixed(2);\n}\n\nexport const calculateScore = (arr) => {\n    const arrLength = arr.length;\n    let score = 0;\n    if (arrLength >= 6) {\n      for(let i = 4; i < arrLength; i++) {\n        if (arr[i] < 0) {\n          score = score - 2;\n          continue;\n        }\n        const benchmark = arr[i-4];\n        if (benchmark < 0) {\n          continue;\n        }\n        if (arr[i] > benchmark * 1.5) {\n          score = score + 3;\n        } else if (arr[i] > benchmark * 1.25) {\n          score = score + 2;\n        } else if (arr[i] > benchmark * 1.10) {\n          score = score + 1;\n        } else if (arr[i] < benchmark * .7) {\n          score = score - 2;\n\n        } else if (arr[i] < benchmark * .9) {\n          score = score - 1;\n        };\n      }\n    }\n    return score;\n}\n\nexport const calculateGrowthScore = (processedData) => {\n  const revenueData = processedData.map((item) => item.revenue);\n  const profitData = processedData.map((item) => item.profit);\n  const revenueScore = calculateScore(revenueData);\n  const profitScore = calculateScore(profitData);\n  const combinedScore = revenueScore + profitScore;\n  const averageProfitScore = (profitScore/(processedData.length - 4)).toFixed(2);\n  const averageRevenueScore = (revenueScore/(processedData.length - 4)).toFixed(2);\n  return {\n      profitScore,\n      revenueScore,\n      combinedScore,\n      averageProfitScore,\n      averageRevenueScore\n  };\n}\n","import { setStorageData, getStorageData } from \"../util\";\n\nexport const resetError = () => (\n    { type: 'RESET_ERROR' }\n);\n\nexport const setError = ({ message, isHtml = false, messageType = 'error'}) => {\n    const error = { message, isHtml, messageType  };\n    return { type: 'SET_ERROR', data: error };\n}\n\nexport const selectWatchlist = (selectedIndex) => {\n    const storageData = getStorageData();\n    storageData.activeWatchlistIndex = selectedIndex;\n    // updateLocalStorage(storageData);\n    setStorageData(storageData);\n    return { type: 'ACTIVE_WATCHLIST_CHANGED', data: selectedIndex };\n}\n\nexport const addNewWatchlist = (name) => {\n    const storageData = getStorageData();\n    // const label = name.split(' ').join('').toLowerCase();\n    storageData.watchlistData.push({ name, companies: [] });\n    // storageData.watchlistData[label] = [];\n    setStorageData(storageData);\n    return { type: 'NEW_WATCHLIST_ADDED', data: storageData };\n}\n\nexport const updateMetadata = (companyId, metadataType, metadataValue) => {\n    const storageData = getStorageData();\n    const watchlistMetadata = (storageData.metadata || {});\n    const companyMetadata = watchlistMetadata[companyId] || {};\n    companyMetadata[metadataType] = metadataValue;\n    storageData.metadata[companyId] = companyMetadata;\n    setStorageData(storageData);\n    return { type: 'METADATA_CHANGED', data: watchlistMetadata };\n}\n","import '../styles/common.scss';\nimport React from 'react';\nimport {connect} from 'react-redux'\nimport {selectWatchlist, addNewWatchlist} from '../actions/commonActions';\n\nclass WatchlistToggler extends React.PureComponent {\n  state = { addFlow: false }\n  selectWatchlist = (index) => {\n    this.props.selectWatchlist(index);\n    this.toggleWatchlistContainer();\n  }\n  addNewWatchlist = () => {\n    this.setState({ addFlow: true });\n    this.toggleWatchlistContainer();\n  }\n  confirmNewWatchlist = (isConfirmed) => {\n    if (isConfirmed) {\n      // read given name and add to store\n      const watchlistName = this.nameInput.value;\n      if (watchlistName) {\n        this.props.addNewWatchlist(watchlistName);\n      }\n    }\n    this.setState({ addFlow: false });\n  }\n  toggleWatchlistContainer = () => {\n    this.setState({ toggleWatchlistContainer: !this.state.toggleWatchlistContainer });\n  }\n  render () {\n      const { watchlistData, activeWatchlistIndex } = this.props.common;\n      const activeWatchlistName = watchlistData[activeWatchlistIndex].name;\n      return (\n        <div className=\"pull-right toggleWatchlistContainer\">\n          <button className=\"custom-button\" onClick={this.toggleWatchlistContainer}>Watchlist: <b>{activeWatchlistName}</b></button>\n          {this.state.toggleWatchlistContainer && \n            <div className=\"listContainer\">\n              {watchlistData.map((item, index) => {\n                  const customStyle = index === activeWatchlistIndex ? {fontWeight: 800 } : {} ; \n                  return(<li onClick={() => this.selectWatchlist(index)} style={customStyle}>{item.name}</li>);\n              })}\n              <li><button style={{background: '#aaa', color: 'white'}} className=\"custom-button\" onClick={this.addNewWatchlist}>Add new list</button></li>\n            </div>\n          }\n          {this.state.addFlow &&\n            <div className=\"addWatchlistContainer\">\n              <div>\n                <input type=\"text\" ref={(item) => {this.nameInput = item;}} placeholder=\"Watchlist name...\" />\n                <button className=\"custom-button\" onClick={() => this.confirmNewWatchlist(true)}>Save</button>&nbsp;&nbsp;\n                <button className=\"custom-button\" onClick={this.confirmNewWatchlist}>Cance</button>\n              </div>\n            </div>\n          }\n        </div>\n      );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  common: state.common\n})\n\nconst mapDispatchToProps = {\n  selectWatchlist,\n  addNewWatchlist\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WatchlistToggler);\n\n","import React, {Fragment} from 'react';\nimport {asyncContainer, Typeahead} from 'react-bootstrap-typeahead';\n\nconst AsyncTypeahead = asyncContainer(Typeahead);\n\nclass TypeaheadComponent extends React.Component {\n  state = {\n    // allowNew: false,\n    isLoading: false,\n    // multiple: false,\n    options: [],\n  };\n\n  selectCompany = (item) => {\n    this.setState({ options:[] });\n    this.props.selectCompany(item);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <AsyncTypeahead\n          id=\"stock-typeahead\"\n          isLoading={this.state.isLoading}\n          labelKey=\"name\"\n          onSearch={this._handleSearch}\n          options={this.state.options || []}\n          placeholder=\"Search for a company...\"\n          onChange={(selected) => {\n            if (selected.length) {\n              this.props.selectCompany(selected[0]);\n            }\n          }}\n        />\n      </Fragment>\n    );\n  }\n\n  _handleSearch = (query) => {\n    this.setState({isLoading: true});\n    this.props.searchCompany(query, (options) => {\n      this.setState({\n          isLoading: false,\n          options,\n      });\n    });\n  }\n}\n\nexport default TypeaheadComponent;\n","import React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nclass ChartRender extends Component {\n\n  categoriesGenerator() {\n    let category = []\n    this.props.processedData.forEach(company => {\n      category = company.map(item=>item.date)\n    });\n    return category;\n  }\n\n  getSeriesData(stockData, name) {\n    const seriesData = [];\n    const type = this.props.chartType;\n    switch (type) {\n      case 'line':\n      case 'spline':\n      case 'bar': {\n        const priceData = stockData.map((item) => item.price);\n        seriesData.push({ type, name: `${name}_price`, data: priceData });\n        \n        const volumeData = stockData.map((item) => item.volume);\n        seriesData.push({ type: 'column', name: `${name}_volume`, data: volumeData, yAxis: 1 });\n        \n        const revenueData = stockData.map((item) => item.revenue);\n        seriesData.push({ type: 'column', name: `${name}_revenue`, data: revenueData, yAxis: 2 });\n\n        const profitData = stockData.map((item) => item.profit);\n        seriesData.push({ type: 'spline', name: `${name}_profit`, data: profitData, yAxis: 3, connectNulls: true });\n        break;\n      }\n      \n      case 'combined': {\n        const data = stockData.map(val => Number(val.price));\n        seriesData.push({ type: 'line', name, data });\n        seriesData.push({ type: 'column', name, data });\n        break;\n      }\n    }\n    return seriesData;\n  }\n\n  getData() {\n    const seriesData = [];\n    this.props.processedData.forEach((element, index) => {\n      const name = this.props.compareList[index].name;\n      seriesData.push(this.getSeriesData(element, name));\n    });\n    const finalData = [];\n    seriesData.forEach(i => {\n      i.forEach(j => {\n        finalData.push(j);\n      })\n    });\n    return finalData;\n  }\n\n  render() {\n    const title = this.props.compareList.length === 1 ? `Chart for ${this.props.compareList[0].name}` : `Comparision chart`;\n    const options = {\n      // chart: {\n      //   marginRight: 260,\n      //   marginLeft: 260\n      // },\n      legend: {\n        align: 'center',\n        verticalAlign: 'bottom',\n        layout: 'vertical',\n        x: -50,\n      },\n      yAxis: [{\n        title: {\n          text: 'Price'\n        },\n      },{\n        title: {\n          text: 'Volume'\n        },\n        opposite: true\n      },{\n        title: {\n          text: 'Revenue'\n        },\n      },{\n        title: {\n          text: 'Profit'\n        },\n        opposite: true\n      }],\n      xAxis: {\n        title: {\n          text: 'date'\n        },\n        categories: this.categoriesGenerator()\n      },\n      labels: {\n        items: [{\n          style: {\n            left: '50px',\n            top: '18px',\n            color: (Highcharts.theme && Highcharts.theme.textColor) || 'black'\n          }\n        }]\n      },\n      title: {\n        text: title\n      },\n      series: this.getData(),\n    };\n\n    return (<div>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n      />\n    </div>)\n  }\n}\n\nexport default ChartRender;","import React, { Component} from 'react';\nimport { connect } from 'react-redux';\nimport '../common/styles/company.css';\nimport Typeahead from '../common/components/typeahead';\nimport { getHistoricalData, searchCompany, getConsolidatedData } from './action';\nimport { setError } from '../common/actions/commonActions';\nimport ChartRender from '../components/chartRender';\nimport { processHistoricalData, getActiveWatchlistData, setActiveWatchlistData } from '../common/util';\nimport { durationOptions } from '../common/constants';\n// import { durationOptions, watchlistName } from '../common/constants';\n// import ErrorBar from '../common/components/ErrorBar';\n\nclass Company extends Component {\n    state = {\n        selectedCompany: { id: 3365, name: 'Tata Consultancy Services Ltd', url: '/company/TCS/consolidated/' },\n        historicalData: [],\n        consolidatedData: [],\n        duration: 1080,\n        chartType: 'spline'\n    };\n\n    componentDidMount() {\n        const duration = this.state.duration;\n        const companyId = this.state.selectedCompany.id;\n        const url = this.state.selectedCompany.url;\n        this.props.getHistoricalData({companyId, duration}, this.historicalDataCallback);\n        this.props.getConsolidatedData({url}, this.consolidatedDataCallback);\n    }\n    \n    historicalDataCallback = (data) => {\n        this.setState({ historicalData: data });\n    }\n\n    consolidatedDataCallback = (data) => {\n        this.setState({ consolidatedData: data });\n    }\n\n    selectCompany = (selection) => {\n        const selectedCompany = {...selection};\n        this.setState({ selectedCompany });\n        const duration = this.state.duration;\n        const companyId = selection.id;\n        const url = selection.url;\n        this.props.getHistoricalData({companyId, duration}, this.historicalDataCallback);\n        this.props.getConsolidatedData({url}, this.consolidatedDataCallback);\n    }\n\n    renderChart = () => {\n        const priceData = this.state.historicalData;\n        const consolidatedData = this.state.consolidatedData;\n        const chartData = processHistoricalData(priceData, consolidatedData);\n        return (\n            <ChartRender chartType={this.state.chartType} processedData = {[chartData]} compareList = {[this.state.selectedCompany]}/>\n        );\n    }\n\n    addToWatchlist = () => {\n        const selectedCompany = this.state.selectedCompany;\n        const watchlistData = getActiveWatchlistData();\n        let errorMessage = null;\n        // validate watchlist and selected company\n        // if (!selectedCompany || watchlistName) {\n        //     errorMessage = 'No stock selected!! or no watchlist exist!!';\n        // } else {\n            if (watchlistData.companies.filter(item => item.id === selectedCompany.id).length === 0) {\n                watchlistData.companies.push(selectedCompany);\n                setActiveWatchlistData(watchlistData);\n                errorMessage = 'Stock added successfully';\n            } else {\n                errorMessage = 'Stock already exist in the watchlist';\n            }\n        // }\n        const error = { message: errorMessage };\n        this.props.setError(error);\n    }\n\n    changeDuration = (duration) => {\n        this.setState({ duration });\n        const companyId = this.state.selectedCompany.id;\n        this.props.getHistoricalData({companyId, duration}, this.historicalDataCallback);\n    }\n\n    renderDuration = () => {\n        return (<div className=\"btn-group pull-left mr-2 mb-2\" role=\"group\" aria-label=\"Basic example\">\n            {durationOptions.map(item => {\n                const customClass = this.state.duration === item.id ? 'active' : ''; \n                return (\n                    <button type=\"button\" className={`btn btn-secondary ${customClass}`} disabled={!this.state.selectedCompany} onClick={() => this.changeDuration(item.id)}>{item.label}</button>\n                )\n            })}\n        </div>);\n    }\n\n    render = () => {\n        return (\n            <div id=\"company\">\n                <div className=\"row ml-4 mr-4 mt-5 mb-5\">\n                    <div className=\"col-md-12 col-lg-8 company-actions\">\n                        {this.renderDuration()}\n                        {this.state.selectedCompany && <button className=\"btn btn-primary pull-left mb-2\" onClick={this.addToWatchlist}>Add to watchlist</button>}\n                    </div>\n                    <div className=\"col-md-12 col-lg-4\">\n                        <Typeahead searchCompany={this.props.searchCompany} selectCompany={this.selectCompany} />\n                    </div>\n                </div>\n                <div className=\"col-12\">\n                    {this.renderChart()}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    company: state.company,\n    common: state.common\n})\n\nconst mapDispatchToProps = {\n    getHistoricalData,\n    getConsolidatedData,\n    searchCompany,\n    setError\n};\n\nconst connectedComponent = connect(mapStateToProps, mapDispatchToProps)(Company);\n\nexport default connectedComponent;","\nimport axios from 'axios';\n\n// const historicalDataApi = 'https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&outputsize=full&apikey=LYK5FRW7A27I9REB';\n// const historicalDataApi = 'https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&apikey=LYK5FRW7A27I9REB';\n// const historicalDataApi = 'https://www.screener.in/api/2/company/3365/prices/?days=30';\n\nexport const getHistoricalData = ({companyId, duration}, callback) => {\n    return (dispatch) => {\n        dispatch({ type: 'SHOW_LOADER' });\n        // axios.get(`${historicalDataApi}&symbol=NSE:${stock}`).then((res) => {\n        axios.get(`/historicalData?companyId=${companyId}&duration=${duration}`).then((res) => {\n            dispatch({ type: 'HIDE_LOADER' });\n            callback(res.data);\n        })\n    }\n}\n\nconst getMonth = (month) => {\n    switch(month.toLowerCase()) {\n        case 'mar': return '03';\n        case 'jun': return '06';\n        case 'sep': return '09';\n        case 'dec': return '12';\n    }\n}\n\nconst getQuarter = (data) => {\n    const qSplit = data.split(' ');\n    const year = qSplit[1];\n    const month = getMonth(qSplit[0]);\n    const quarter = `${year}-${month}`;\n    return quarter;\n}\n\nconst processConsolidatedData = (data) => {\n    const processedData = {\n        quarter: [], revenue: [], profit: []\n    }\n    var parser = new DOMParser();\n    var doc = parser.parseFromString(data, \"text/html\");\n    // var body = doc.querySelector('body');\n    const tableRows = doc.querySelectorAll('body #quarters table tr');\n    const quarterTds = tableRows[0].querySelectorAll('th');\n    const revenueTds = tableRows[1].querySelectorAll('td');\n    const profitTds = tableRows[10].querySelectorAll('td');\n    quarterTds.forEach((item, index) => {\n        if (!index) return;\n        const quarter = getQuarter((quarterTds[index].textContent||'').trim());\n        // processedData.quarter.push((quarterTds[index].textContent||'').trim());\n        processedData.quarter.push(quarter);\n        processedData.revenue.push((revenueTds[index].textContent||'').replace(/,/g, '').trim());\n        processedData.profit.push((profitTds[index].textContent||'').replace(/,/g, '').trim());\n    });\n    return processedData;\n}\n\nexport const getConsolidatedData = ({url}, callback) => {\n    return (dispatch) => {\n        dispatch({ type: 'SHOW_LOADER' });\n        // callback({consolidatedData: {test: 'testData'}});\n        // axios.get(`http://localhost:3300/historicalData?companyId=${companyId}&duration=${duration}`).then((res) => {\n        axios.get(`/consolidatedData?url=${url}`).then((res) => {\n            dispatch({ type: 'HIDE_LOADER' });\n            const processedData = processConsolidatedData(res.data);\n            callback(processedData);\n        }).catch((error) => {\n            const message = error.message;\n            const isHtml = false;\n            const messagetype = 'error';\n            const errorObject = { message, isHtml, messagetype  };\n            dispatch({ type: 'SET_ERROR', data: errorObject });\n        });\n    }\n}\n\nexport const searchCompany = (data, callback) => {\n    return (dispatch) => {\n        dispatch({ type: 'SHOW_LOADER' });\n        axios.get(`/searchCompany?data=${data}`).then((res) => {\n            dispatch({ type: 'HIDE_LOADER' });\n            callback(res.data);\n        })\n    }\n}\n\n\n","import axios from 'axios';\n\n// const host = 'https://www.alphavantage.co/';\n// const host = 'http://localhost:3300/';\nconst host = '/';\n\nconst historicalDataApi = 'query?function=TIME_SERIES_DAILY&apikey=LYK5FRW7A27I9REB';\n\n\n// export const getComparisionListData = (compareList, callback) => {\n//     return (dispatch) => {\n//         const promises = [];\n\n//         compareList.forEach(element => {\n//             const test = axios.get(`${host}${historicalDataApi}&symbol=NSE:${element}`);\n//             promises.push(test);\n//         });\n//         dispatch({ type: 'SHOW_LOADER' });\n//         Promise.all(promises).then(([...res]) => {\n//             console.log(res);\n//             dispatch({ type: 'HIDE_LOADER' });\n//             callback(res);\n//         });\n//     }\n// }\n\nconst getMonth = (month) => {\n    switch(month.toLowerCase()) {\n        case 'mar': return '03';\n        case 'jun': return '06';\n        case 'sep': return '09';\n        case 'dec': return '12';\n    }\n}\n\nconst getQuarter = (data) => {\n    const qSplit = data.split(' ');\n    const year = qSplit[1];\n    const month = getMonth(qSplit[0]);\n    const quarter = `${year}-${month}`;\n    return quarter;\n}\n\nconst processConsolidatedData = (data) => {\n    const processedData = {\n        quarter: [], revenue: [], profit: []\n    }\n    var parser = new DOMParser();\n    var doc = parser.parseFromString(data, \"text/html\");\n    // var body = doc.querySelector('body');\n    const tableRows = doc.querySelectorAll('body #quarters table tr');\n    if (tableRows && tableRows.length) {\n        const quarterTds = tableRows[0].querySelectorAll('th');\n        const revenueTds = tableRows[1].querySelectorAll('td');\n        const profitTds = tableRows[10].querySelectorAll('td');\n        quarterTds.forEach((item, index) => {\n            if (!index) return;\n            const quarter = getQuarter((quarterTds[index].textContent || '').trim());\n            // processedData.quarter.push((quarterTds[index].textContent||'').trim());\n            processedData.quarter.push(quarter);\n            processedData.revenue.push((revenueTds[index].textContent || '').replace(/,/g, '').trim());\n            processedData.profit.push((profitTds[index].textContent || '').replace(/,/g, '').trim());\n        });\n    }\n    return processedData;\n}\n\nexport const getConsolidatedData = ({url}, callback) => {\n    return (dispatch) => {\n        dispatch({ type: 'SHOW_LOADER' });\n        // callback({consolidatedData: {test: 'testData'}});\n        // axios.get(`http://localhost:3300/historicalData?companyId=${companyId}&duration=${duration}`).then((res) => {\n        axios.get(`/consolidatedData?url=${url}`).then((res) => {\n            dispatch({ type: 'HIDE_LOADER' });\n            const processedData = processConsolidatedData(res.data);\n            callback(processedData);\n        })\n    }\n}\n\n\nexport const getComparisionListData = (watchlist = [], callback) => {\n    return (dispatch) => {\n        const promises = [];\n        watchlist.forEach(element => {\n            // const companyId = element.id;\n            // const duration = 30;\n            // const test = axios.get(`http://localhost:3300/historicalData?companyId=${companyId}&duration=${duration}`);\n            const url = element.url;\n            const test =axios.get(`/consolidatedData?url=${url}`);\n            promises.push(test);\n        });\n        dispatch({ type: 'SHOW_LOADER' });\n        Promise.all(promises).then(([...res]) => {\n            dispatch({ type: 'HIDE_LOADER' });\n            const processedData = [];\n            res.forEach(element => {\n                processedData.push(processConsolidatedData(element.data));\n            });\n            callback(processedData);\n        })\n    }\n}\n","import React from 'react';\nimport { updateMetadata } from '../../common/actions/commonActions';\nimport {connect} from 'react-redux'\n\nconst colorCodes = ['a', 'b', 'c', 'd'];\n// portpholop, observable-positive, observable-negative and defect respectively \n\nclass ColoredCircle extends React.PureComponent {\n  state = {}\n  toggleOptions = () => {\n      const showOptions = !this.state.showOptions;\n      this.setState({ showOptions, showNote: false });\n  }\n\n  toggleNote = () => {\n        const showNote = !this.state.showNote;\n        this.setState({ showNote, showOptions: false })\n    }\n\n    updateMetadata = (itemId, type, value) => {\n    if (type === 'color') {\n        this.setState({showOptions: false});\n    } else if (type === 'note') {\n        value = this.textarea.value;\n        this.setState({showNote: false});\n    }\n    // tbd confirm change\n    this.props.dispatch(this.props.updateMetadata(itemId, type, value));\n  }\n\n  moveStock = (index) => {\n    this.toggleOptions();\n    this.props.moveStock(index);\n  }\n  \n  render = () => {\n    const {showOptions, showNote} = this.state;\n    const watchlistData = this.props.common.watchlistData;\n    const {item, common} = this.props;\n    const metadata = common.metadata || {};\n    const note = (metadata[item.id] || {}).note;\n    const color = (metadata[item.id] || {}).color;\n    const className = `coloredCircle ${color}`;\n      return (\n          <React.Fragment>\n              <button style={{margin: '3px'}} className={className} onClick={this.toggleOptions}></button>\n              <button className=\"custom-button\" onClick={this.toggleNote}>i</button>\n              {showNote && <div style={{width: 'auto'}} className=\"moreActions\">\n                    <button style={{ margin: '-6px, -6px, 0 0' }} className=\"custom-button pull-right\" onClick={this.toggleNote}>&times;</button>\n                    <h6 class=\"pull-left\">{item.name}</h6>\n                    <div>\n                        <textarea\n                            ref={item => this.textarea = item}\n                            defaultValue={note} \n                        >\n                        </textarea>   \n                    </div>\n                    <button style={{background: 'white'}} className=\"pull-right\" onClick={() => this.updateMetadata(item.id, 'note')}>Save</button>\n                </div>}\n              {showOptions && <div className=\"moreActions\">\n                  {\n                      colorCodes.map(color => {\n                          const className = `coloredCircle ${color}`;\n                          return <span className={className} onClick={() => this.updateMetadata(item.id, 'color', color)}></span>;\n                      })\n                  }\n                  <hr />\n                  <b>Move to:</b>\n                  {watchlistData.map((item, index) => {\n                      return (\n                          <li className=\"moveOptions\" onClick={() => this.moveStock(index)}>{item.name}</li>\n                      );\n                  })}\n              </div>}\n          </React.Fragment>\n      );\n  }\n}\nconst mapStateToProps = (state) => ({\n    common: state.common\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateMetadata,\n    dispatch\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColoredCircle);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Form from 'react-bootstrap/Form';\nimport ColoredCircle from './coloredCircle';\nimport {weeksArr} from '../../common/util'\n\nconst RemoveStockBtn = styled.button`\n    font-size: 10px,\n    color: #fa3,\n    cursor: pointer\n`;\n\nexport default class WatchlistRow extends React.PureComponent {\n  render = () => {\n      const { item, index, handleCheckboxChange, renderChart, removeStock, moveStock, watchlist, watchlistData, priceChangeRange } = this.props;\n      const scoreR = item.growthScore.revenueScore;\n      const scoreP = item.growthScore.profitScore;\n      const name = item.name;\n      const url = item.url;\n      const checked = item.checked;\n    //   const price = item.price || 'NA';\n    //   const volume = item.volume || 'NA';\n      const change = item.change;\n\n      return (\n          <tr key={index}>\n              <td>\n                  <Form.Check type='checkbox' checked={checked} onChange={handleCheckboxChange} />\n              </td>\n              <td>\n                  <ColoredCircle item={item} moveStock={moveStock} watchlistData={watchlistData} />\n              </td>\n              <td>{scoreR}, {scoreP}</td>\n              <td>\n                  <a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://www.screener.in${url}`}>\n                      {name}\n                  </a>\n              </td>\n              {/* <td>{price}, ({item.priceChange[0]})%</td> */}\n              {/* <td>{weeksArr.map(i => item.priceChange[i]).slice(1).join('%, ')}%</td> */}\n              {/* {weeksArr.map((i, index) => {\n                  if (!index) {\n                      return null;\n                  } else {\n                      return (<td>{item.priceChange[i]} %</td>);\n                  }\n                })} */}\n                {weeksArr.map((i, index) => {\n                    if (1-1) {\n                        return null;\n                    } else {\n                    const price = item.priceChange[i];\n                    const range = priceChangeRange[index];\n                    const min = range[0];\n                    const max = range[1];\n                    let r = 0;\n                    let g = 0;\n                    let b = 0;\n                    let a = 1;\n                    if (min > 0) {\n                        // min and max both are positive\n                    } else if (max < 0) {\n                        // min and max both are negative\n                    } else {\n                        // min is negative and max is positive\n                        if (price > 0) {\n                            // green color\n                            const diff = max;\n                            const units = max - price; \n                            g = 256;\n                            a = units/diff;\n                        } else {\n                            // red color\n                            const diff = min;\n                            const units = min - price;\n                            r = 256;\n                            a = units/diff;\n                        }\n                    }\n                    const style = {backgroundColor: `rgba(${r}, ${g}, ${b}, ${(1-a)})`};\n                    return (\n                        <td style={style}>\n                            {!index && <span>{item.price} &nbsp;</span>}\n                            {price} %\n                        </td>\n                    );\n                  }\n                })}\n              {/* <td>{price}, {item.priceChange[0]}%</td> */}\n              {/* <td>{volume}, ({change.volume})%</td> */}\n              <td><RemoveStockBtn className=\"fa fa-times\" onClick={() => removeStock(index)}></RemoveStockBtn></td>\n              <td>{renderChart(item.historicalData, index)}</td>\n          </tr>\n      );\n  }\n}\n","import React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nclass ChartRender extends Component {\n\n  getSeriesData(stockData) {\n    const seriesData = [];\n    seriesData.push({ type: 'spline', name: `price`, data: stockData.price });\n    seriesData.push({ type: 'column', name: `volume`, data: stockData.volume, yAxis: 1 });\n    return seriesData;\n  }\n\n  render() {\n    const options = {\n      chart: {\n        // marginRight: 260,\n        // marginLeft: 260\n        height: 100\n      },\n      legend: {\n        // align: 'center',\n        // verticalAlign: 'bottom',\n        // layout: 'vertical',\n        // x: -50,\n        enabled: false\n      },\n      yAxis: [{\n        title: {\n          text: false,\n          visible: false\n        },\n      },{\n        title: {\n          text: false,\n          visible: false\n        },\n        opposite: true\n      }],\n    //   xAxis: {\n    //     title: {\n    //       text: 'date'\n    //     },\n    //     categories: this.categoriesGenerator()\n    //   },\n      labels: {\n          visible: false\n        // items: [{\n        //   style: {\n        //     left: '50px',\n        //     top: '18px',\n        //     color: (Highcharts.theme && Highcharts.theme.textColor) || 'black'\n        //   }\n        // }]\n      },\n      title: {\n        text: '',\n      },\n      series: this.getSeriesData(this.props.processedData),\n    };\n\n    return (<div>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n        key={this.props.key}\n      />\n    </div>)\n  }\n}\n\nexport default ChartRender;","import './watchlist.scss'\nimport React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { getWatchlistData, setCompareList, updataWatchlistData } from './actions';\nimport { getComparisionListData } from '../comparision/action';\nimport { setError } from '../common/actions/commonActions';\nimport Form from 'react-bootstrap/Form';\nimport { Link } from 'react-router-dom';\nimport WatchlistRow from './components/watchlistRow';\nimport ChartRender from '../components/BasicChart'\nimport '../common/styles/watchlist.css';\nimport {calculateGrowthScore, calculatePriceChange, calculateAveragePriceChange,\n    setActiveWatchlistData, getActiveWatchlistData, setStorageData, getStorageData, weeksArr} from '../common/util'\n\n// var ref = window.firebase.database().ref();\n\n// ref.on(\"value\", function(snapshot) {\n//    console.log(snapshot.val());\n// }, function (error) {\n//    console.log(\"Error: \" + error.code);\n// });\n\nclass Watchlist extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    componentDidMount() {\n        this.initalizeWatchlist();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.common.activeWatchlistIndex !== this.props.common.activeWatchlistIndex) {\n            this.initalizeWatchlist();\n        }\n    }\n\n    initalizeWatchlist = () => {\n        // make api call to get data for each item in watchlist\n        const watchlist = getActiveWatchlistData();\n        this.props.getWatchlistData(watchlist.companies, (priceVolumeData) => {\n            const watchlistData = [];\n            const growthScoreArr = [];\n            this.props.getComparisionListData(watchlist.companies, (compareListData) => {\n                const earningData = [];\n                watchlist.companies.forEach((data, index) => {\n                    const compareListDataItem = compareListData[index];\n                    const processedData = []\n                    for (let index = 0; index < compareListDataItem.quarter.length; index++) {\n                        const date = compareListDataItem.quarter[index];\n                        const revenue = Number(compareListDataItem.revenue[index]);\n                        const profit = Number(compareListDataItem.profit[index]);\n                        processedData.push({ date, revenue, profit });\n                    }\n                    earningData.push(processedData);\n                    growthScoreArr.push(calculateGrowthScore(processedData));\n                });\n                watchlist.companies.forEach((element, index) => {\n                    const priceVolumeDataItem = priceVolumeData[2 * index];\n                    const priceVolumeDataItem1 = priceVolumeData[2 * index + 1];\n                    const price = [...priceVolumeDataItem.data.datasets[0].values.map(item => Number(item[1]))];\n                    const price1 = [...priceVolumeDataItem1.data.datasets[0].values.map(item => Number(item[1]))];\n                    const lastPrice = price1.pop();\n                    const secondLastPrice = price1.pop();\n                    // price.pop();\n                    // price.push(secondLastPrice);\n                    // price.push(lastPrice);\n                    price.splice(price.length - 1, 1, secondLastPrice, lastPrice);\n\n                    const volume = [...priceVolumeDataItem.data.datasets[1].values.map(item => Number(item[1]))];\n                    const volume1 = [...priceVolumeDataItem1.data.datasets[1].values.map(item => Number(item[1]))];\n                    const lastVolume = volume1.pop();\n                    const secondLastVolume = volume1.pop();\n                    // price.pop();\n                    // price.push(secondLastPrice);\n                    // price.push(lastPrice);\n                    volume.splice(volume.length - 1, 1, secondLastVolume, lastVolume);\n\n                    const change = this.calculateChange(index, { price, volume });\n                    // const priceChange = [calculatePriceChange(price, 0), calculatePriceChange(price, 1), calculatePriceChange(price, 2), calculatePriceChange(price, 4), calculatePriceChange(price, 8)]\n                    const priceChange = this.getPriceChange(price, weeksArr);\n                            \n                    watchlistData.push({\n                        price: price[price.length - 1],\n                        volume: volume[volume.length - 1],\n                        growthScore: growthScoreArr[index],\n                        score: growthScoreArr[index].combinedScore,\n                        change,\n                        ...element,\n                        historicalData: { price, volume },\n                        priceChange\n                    });\n                });\n\n                this.setState({\n                    watchlist,\n                    watchlistData,\n                    // averagePriceChange: [calculateAveragePriceChange(watchlistData, 0), calculateAveragePriceChange(watchlistData, 1), calculateAveragePriceChange(watchlistData, 2), calculateAveragePriceChange(watchlistData, 4), calculateAveragePriceChange(watchlistData, 8)],\n                    averagePriceChange: this.getAveragePriceChange(watchlistData, weeksArr),\n                });\n            });\n        });\n    }\n\n    calculatePriceChange = (prices, noOfWeeks) => {\n        // const days = noOfWeeks === 0 ? 1 : noOfWeeks * 5;\n        const offset = noOfWeeks ? noOfWeeks + 1 : 1;\n        // const latestPrice = prices[prices.length - 1] || 0;\n        // const previousPrice = prices[prices.length - 1 - days] || prices[0] || 1;\n        const latestPrice = prices[0] || 0;\n        const previousPrice = prices[offset];\n        let change = 'NA';\n        if (previousPrice) {\n            change = (latestPrice - previousPrice)/previousPrice;\n            change = (change * 100).toFixed(2);\n        }\n        return change;\n      }\n\n    getPriceChange = (price, weeks = weeksArr) => {\n        const priceChange = [];\n        price = price.slice(0).reverse();\n        // price.splice(1, 1);\n        for (const w of weeks) {\n            priceChange[w] = this.calculatePriceChange(price, w);\n        }\n        return priceChange;\n    }\n\n    getAveragePriceChange = (watchlistData, weeks = weeksArr) => {\n        const averagePriceChange = [];\n        for (const w of weeks) {\n            averagePriceChange[w] = calculateAveragePriceChange(watchlistData, w);\n        }\n        return averagePriceChange;\n    }\n\n    handleCheckboxChange = (event, index) => {\n        const { watchlistData, watchlist } = this.state;\n        const watchlistDataItem = watchlistData[index];\n        if (typeof(index) === 'undefined') {\n            // master\n            for (let item of watchlist.companies) {\n                item.checked = event.target.checked;\n            }\n            for (let item of watchlistData) {\n                item.checked = event.target.checked;\n            }\n        } else {\n            const checked = event.target.checked;\n            const matchingIndexInWatchlist = this.state.watchlist.companies.findIndex(item => item.name === watchlistDataItem.name);\n            const watchlistItem = watchlist.companies[matchingIndexInWatchlist];\n            watchlistItem.checked = checked;\n            watchlistDataItem.checked = checked;\n        }\n        setActiveWatchlistData(watchlist);\n        this.setState({ watchlist, watchlistData });\n    }\n\n    compare = (param) => {\n        if (!param) {\n            const { watchlist, watchlistData } = this.localData;\n            this.setState({\n                watchlist,\n                watchlistData,\n                averagePriceChange: this.getAveragePriceChange(watchlistData, weeksArr),\n                compare: false \n            });\n            this.localData = {};\n            return;\n        }\n        const { watchlistData, watchlist } = this.state;\n        const newWatchlistData = watchlistData.filter(item => item.checked);\n        const newWatchlist = {...watchlist, companies: []};\n        for (let item of newWatchlistData) {\n            const matchingIndexInWatchlist = watchlist.companies.findIndex(item2 => item2.name === item.name);\n            newWatchlist.companies.push(watchlist.companies[matchingIndexInWatchlist]);\n        }\n        this.localData = {\n            watchlist,\n            watchlistData\n        };\n        this.setState({\n            watchlist: newWatchlist,\n            watchlistData: newWatchlistData,\n            averagePriceChange: this.getAveragePriceChange(newWatchlistData, weeksArr),\n            compare: true\n        });\n    }\n\n    removeStock = (index) => {\n        const watchlistData = [...this.state.watchlistData];\n        const removedItemFromWatchlistData = watchlistData.splice(index, 1)[0];\n        const watchlist = this.state.watchlist;\n        const matchingIndexInWatchlist = watchlist.companies.findIndex(item => item.name === removedItemFromWatchlistData.name);\n        const removedItemFromWatchlist = watchlist.companies.splice(matchingIndexInWatchlist, 1)[0];\n        setActiveWatchlistData(watchlist);\n        this.setState({\n            watchlist,\n            watchlistData,\n            // averagePriceChange: [calculateAveragePriceChange(watchlistData, 0), calculateAveragePriceChange(watchlistData, 1), calculateAveragePriceChange(watchlistData, 2), calculateAveragePriceChange(watchlistData, 4), calculateAveragePriceChange(watchlistData, 8)],\n            averagePriceChange: this.getAveragePriceChange(watchlistData, weeksArr),\n        });\n        return removedItemFromWatchlist;\n    }\n\n    moveStock = (index, targetWatchlistIndex) => {\n        let company = null;\n        if (!this.props.common.activeWatchlistIndex) {\n            // if origin is master watchlist - do a copy instead\n            const watchlistData = [...this.state.watchlistData];\n            const companyInWatchlistData = watchlistData[index];\n            const watchlist = this.state.watchlist;\n            const matchingIndexInWatchlist = watchlist.companies.findIndex(item => item.name === companyInWatchlistData.name);\n            company = watchlist.companies[matchingIndexInWatchlist];\n        } else {\n            // remove stock from current watchlist and add in target watchlist\n            company = this.removeStock(index);\n        }\n        if (company) {\n            let message = 'Item moved/copied successfully!!';\n            const storageData = getStorageData();\n            const watchlistData = storageData.watchlistData[targetWatchlistIndex];\n            const isDuplicate = watchlistData.companies.find(item => item.id === company.id);\n            if (isDuplicate) {\n                message = 'Item already exist in target watchlist!!';\n            } else {\n                watchlistData.companies.push(company);\n                storageData.watchlistData[targetWatchlistIndex] = watchlistData;\n                setStorageData(storageData);\n                updataWatchlistData(storageData.watchlistData);\n            }\n            // notification\n            const error = { message };\n            this.props.setError(error);\n        }\n    }\n\n    renderChart = (historicalData, index) => {\n        return (\n            <ChartRender key={index} processedData = {historicalData}/>\n        );\n    }\n\n    calculateChange = (index, data) => {\n        function calculate(items, isVolume) {\n            let change = 'NA';\n            if (items && Array.isArray(items) && items.length > 1) {\n                const lastItem = items[items.length - 1];\n                const secondLastItem = items[items.length - 2];\n                change = ((lastItem - (isVolume ? 0 : secondLastItem)) * 100 / secondLastItem).toFixed(2);\n            }\n            return change;\n        }\n        return {price: calculate(data.price), volume: calculate(data.volume, true)};\n    }\n\n    sortBy = (param, numericSort) => {\n        const {watchlistData, sortBy} = this.state;\n        let sortOrder = this.state.sortOrder;\n        if (sortBy === param) {\n            sortOrder = !sortOrder;\n        } else {\n            sortOrder = true;\n        }\n        watchlistData.sort((a, b) => {\n            if (param.indexOf('priceChange') !== -1) {\n                const paramSplits = param.split('.');\n                const aValue = a[paramSplits[0]][paramSplits[1]];\n                const bValue = b[paramSplits[0]][paramSplits[1]];\n                return aValue - bValue || isNaN(aValue) - isNaN(bValue);\n            } else {\n                if (numericSort) {\n                    return a[param] - b[param];\n                }\n                return (a[param] || '').toLowerCase() > (b[param] || '').toLowerCase() ? 1 : -1;\n            }\n        });\n        if (!sortOrder) {\n            watchlistData.reverse();    \n        }\n        this.setState({watchlistData, sortBy: param, sortOrder });\n    }\n\n    renderWatchlist = () => {\n        const {watchlist, watchlistData, averagePriceChange} = this.state;\n        if( !watchlist || !watchlistData || !watchlistData.length ) {\n            return null;\n        }\n        const masterChecked = watchlist.companies.findIndex(item => !item.checked) === -1 ? true : false;\n        const priceChangeRange = [];\n        for (const w of weeksArr) {\n            const priceChangeArr = watchlistData.map(item => Number(item.priceChange[w]));\n            const max = _.max(priceChangeArr);\n            const min = _.min(priceChangeArr);\n            priceChangeRange.push([min, max]);\n        }\n        console.log(priceChangeRange);\n        watchlistData.map(item => item.priceChange)\n    \n        const html = watchlistData.map((item, index) => {\n            return (\n                <WatchlistRow\n                    key={item.name}\n                    index={index}\n                    item={item}\n                    handleCheckboxChange={(e) => this.handleCheckboxChange(e, index)}\n                    renderChart={this.renderChart}\n                    removeStock={this.removeStock}\n                    moveStock={(targetWatchlistIndex) => this.moveStock(index, targetWatchlistIndex)}\n                    watchlist={watchlist}\n                    watchlistData={watchlistData}\n                    priceChangeRange={priceChangeRange}\n                />\n            );\n        });\n        return (\n            <table className=\"table table-stripped\">\n                <thead>\n                    <tr>\n                        <th>\n                            <Form.Check type='checkbox' checked={masterChecked} onChange={this.handleCheckboxChange} />    \n                        </th>\n                        <th><span onClick={() => this.sortBy('color')}>Color</span></th>\n                        <th><span onClick={() => this.sortBy('score', true)}>Score</span></th>\n                        <th style={{width: '20%'}}>\n                            <span onClick={() => this.sortBy('name')}>Company</span>\n                        </th>\n                        {/* <th>\n                            <span>\n                                OWPC&nbsp;\n                                <small>\n                                    ({averagePriceChange.map((i, ind) => {\n                                        if (!i || !ind) { return null; }\n                                        return (\n                                            <div onClick={() => this.sortBy(`priceChange.${ind}`, true)}>{i}%,&nbsp;</div>\n                                        );\n                                    })})\n                                </small>\n                            </span>\n                        </th> */}\n                        <th>\n                            <span onClick={() => this.sortBy('priceChange.0', true)}>Price <small>({averagePriceChange[0]}% change)</small></span>\n                        </th>\n                        {averagePriceChange.map((i, ind) => {\n                            if (!i || !ind) { return null; }\n                            return (\n                                <th>\n                                    <div onClick={() => this.sortBy(`priceChange.${ind}`, true)}>{ind} WC {i} %</div>\n                                </th>\n                            );\n                        })}\n                        <th>Rem.</th>\n                        <th style={{width: '30%'}}>Chart <small></small></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {html}\n                </tbody>\n            </table>\n        );\n    }\n\n    renderCompareView = () => {\n        return (\n            <div>\n                {!this.state.compare && <button onClick={() => this.compare(true)} className=\"btn\">Compare selected stocks &gt;</button>}\n                {this.state.compare && <button onClick={() => this.compare(false)} className=\"btn\">Back to Main view &gt;</button>}\n            </div>\n        )\n    }\n\n    render = () => {\n        const count = ((this.state.watchlist || {}).companies || []).length;\n        return (\n            <div>\n                <h4>Watchlist ({count} stocks)</h4>\n                {/* <Link to={{pathname: `/comparision`}}>\n                    <button className=\"btn\">Compare selected stocks &gt;</button>\n                </Link> */}\n                {this.renderCompareView()}\n                {this.renderWatchlist()}\n                {this.renderCompareView()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    watchlist: state.watchlist,\n    common: state.common\n})\n\nconst mapDispatchToProps = {\n    getWatchlistData,\n    setCompareList,\n    getComparisionListData,\n    setError\n    // moveStock\n};\n\nconst connectedComponent = connect(mapStateToProps, mapDispatchToProps)(Watchlist);\n\nexport default connectedComponent;\n","import axios from 'axios';\nimport { setStorageData, getStorageData } from \"../common/util\";\n\n// const host = 'https://www.alphavantage.co/';\n// const host = 'http://localhost:3300/';\n\n// const historicalDataApi = 'query?function=TIME_SERIES_DAILY&apikey=LYK5FRW7A27I9REB';\n\n// const duration = 366;\nconst host = '/';\n\nconst duration = 1850;\n\nexport const getHistoricalData = ({companyId, duration}, callback) => {\n    return (dispatch) => {\n        dispatch({ type: 'SHOW_LOADER' });\n        axios.get(`/historicalData?companyId=${companyId}&duration=${duration}`).then((res) => {\n            dispatch({ type: 'HIDE_LOADER' });\n            callback(res.data);\n        })\n    }\n}\n\nexport const getWatchlistData = (watchlist, callback) => {\n    return (dispatch) => {\n        const promises = [];\n        watchlist.forEach(element => {\n            const companyId = element.id;\n            const test = axios.get(`/historicalData?companyId=${companyId}&duration=${duration}`);\n            const test1 = axios.get(`/historicalData?companyId=${companyId}&duration=${7}`);\n            promises.push(test);\n            promises.push(test1);\n        });\n        dispatch({ type: 'SHOW_LOADER' });\n        Promise.all(promises).then(([...res]) => {\n            dispatch({ type: 'HIDE_LOADER' });\n            callback(res);\n        });\n    }\n} \n\nexport  const setCheckboxSelectionList = (CheckboxSelectionList)=>{\n    return (dispatch)=> dispatch({type:'CHECKBOX_SELECTION_LIST', data : CheckboxSelectionList})\n} \nexport  const setCompareList = (compareList)=>{\n    return (dispatch)=> dispatch({type:'COMPARE_LIST', data : compareList})\n}\n\nexport const updataWatchlistData = (data) => {\n    return (dispatch)=> dispatch({type:'UPDATE_WATCHLIST_DATA', data})\n}\n\n","import React from 'react';\n// import loaderImg from '../images/loader.gif';\nimport loaderImg from '../images/logo.svg';\n\nexport default function() {\n    return (\n        <div className=\"loader-container\">\n            <div className=\"loader-inner-container\">\n                <img className=\"img-spinner\" src={loaderImg} alt=\"loader\" />\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { resetError } from '../actions/commonActions';\n\n// expects error object in following format\n// {\n//     message: 'String - error message that appears on screen',\n//     isHtml: 'Boolean - flag to represent whether message is text string or html string',\n//     messageType: 'String - error/warning/success'\n// }\nlet timer = null;\nconst resetTimer = (callback) => {\n    timer && clearTimeout(timer);\n    timer = setTimeout(callback, 5000);\n}\n\nconst ErrorBar = (props) => {\n    if (!props.error.message) {\n        return null;\n    }\n    const error = props.error;\n    const customClass = `error-bar ${error.messageType || 'error'}`;\n    resetTimer(props.resetError);\n    return (\n        <div className={customClass}>\n            <button className=\"custom-button pull-right close\" onClick={() => props.resetError()}>&times;</button>\n            {error.isHtml ? <span dangerouslySetInnerHTML={{ __html: error.message }}></span> : <span>{error.message}</span>}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n       error: state.common.error || {}\n})\n\nconst mapDispatchToProps = {\n    resetError\n}\n\nconst connectedComponent = connect(mapStateToProps, mapDispatchToProps)(ErrorBar);\n\nexport default connectedComponent;\n\n","// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Navigation from './common/components/Navigation';\nimport WatchlistToggler from './common/components/WatchlistToggler';\nimport Company from './company';\nimport Watchlist from './watchlist';\n// import Comparision from './comparision';\nimport Loader from './common/components/loader';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport ErrorBar from './common/components/ErrorBar';\nimport './common/styles/common.css';\nimport './common/styles/common.scss';\n\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\nfunction App({ common }) {\n  return (\n    <div className=\"App\">\n      {common.showLoader && <Loader />} \n      <BrowserRouter>\n        <WatchlistToggler />\n        <Navigation />\n        <ErrorBar />\n        {/* <div className=\"container\"> */}\n        <div className=\"\">\n          <Route exact path=\"/\" component={Company} />\n          <Route path=\"/company\" component={Company} />\n          <Route path=\"/watchlist\" component={Watchlist} />\n          {/* <Route path=\"/comparision\" component={Comparision} /> */}\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({ common: state.common });\n\nexport default connect(mapStateToProps, null)(App);\n\n","const initialState = {\n    cartItems: []\n}\nconst companyReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'SET_DATA': {\n            const newState = {...state};\n            newState.cartItems = action.data;\n            return newState;\n        }\n        case 'ADD_ITEM': {\n            const newState = {...state};\n            // const data = action.data ||\n            const id = newState.cartItems.length ? ([newState.cartItems.length-1].id + 1) : 1;\n            newState.cartItems.push({ name: 'XYZ', price: '$9.99', id: id });\n            return newState;\n        }\n        case 'REMOVE_ITEM': {\n            const newCartItems = state.cartItems.filter((item) => item.id !== action.data.id);\n            return { cartItems: newCartItems };\n        }\n        default: return state;\n    }\n}\n\nexport default companyReducer;","const watchlistReducer = (state = { cartTotal: '500', checkboxSelectionList: [] }, action) => {\n    switch (action.type) {\n        case 'CHECKBOX_SELECTION_LIST': return {\n            ...state,\n            checkboxSelectionList: action.data\n        }\n\n        default: return state;\n    }\n}\n\n\nexport default watchlistReducer;","const comparisionReducer = (state = {}, action) => {\n    switch(action.type) {\n        // case 'UPDATE_TOTAL': {\n        //     const newState = Object.assign({ test: 'test-item' }, state);\n        //     newState.cartTotal = Number(newState.cartTotal) + 100;\n        //     return newState;\n        // }\n        default: return state;\n    }\n}\n\nexport default comparisionReducer;\n","// const localStorageNode = 'app-data';\nimport { getStorageData } from '../common/util';\n\nconst storageData = getStorageData();\n\nconst initialState = {\n    showLoader: false,\n    compareList : [],\n    // activeWatchlistIndex: storageData.activeWatchlistIndex,\n    // watchlistData: storageData.watchlistData,\n    ...storageData,\n    error: null\n}\n\nconst commonReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'SHOW_LOADER': {\n            const newState = Object.assign({}, state);\n            newState.showLoader = true;\n            return newState;\n        }\n        case 'HIDE_LOADER': {\n            const newState = Object.assign({}, state);\n            newState.showLoader = false;\n            return newState;\n        }\n        case 'COMPARE_LIST': {\n            return {\n                ...state,\n                compareList : action.data\n            }\n        }\n        case 'RESET_ERROR': {\n            return {\n                ...state,\n                error: null\n            }\n        }\n        case 'SET_ERROR': {\n            return {\n                ...state,\n                error: action.data\n            }\n        }\n        case 'ACTIVE_WATCHLIST_CHANGED': {\n            return {\n                ...state,\n                activeWatchlistIndex: action.data\n            }\n        }\n        case 'WATCHLIST_CHANGED': {\n            return {\n                ...state,\n                watchlistData: action.data\n            }\n        }\n        case 'METADATA_CHANGED': {\n            return {\n                ...state,\n                metadata: action.data\n            }\n        }\n        case 'NEW_WATCHLIST_ADDED': {\n            return {\n                ...state,\n                watchlistData: action.data.watchlistData\n            }\n        }\n        default: return state;\n    }\n}\n\nexport default commonReducer;\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport companyReducer from './reducers/company-reducer';\nimport watchlistReducer from './reducers/watchlist-reducer';\nimport comparisionReducer from './reducers/comparision-reducer';\nimport commonReducer from './reducers/common-reducer';\n// // import createSagaMiddlware from 'redux-saga';\n\nconst reducers = combineReducers({\n    comapny: companyReducer,\n    watchlist: watchlistReducer,\n    comparision: comparisionReducer,\n    common: commonReducer\n});\n\nconst middlewares = applyMiddleware(thunk);\nconst store = createStore(reducers, middlewares);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}